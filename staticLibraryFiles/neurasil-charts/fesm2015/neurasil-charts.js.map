{"version":3,"file":"neurasil-charts.js","sources":["ng://neurasil-charts/lib/models/NeurasilChartType.ts","ng://neurasil-charts/lib/neurasil-charts.service.ts","ng://neurasil-charts/lib/pipes/neurasil-data-filter/neurasil-data-filter.pipe.ts","ng://neurasil-charts/lib/neurasil-charts.component.ts","ng://neurasil-charts/lib/neurasil-charts-toolbar/neurasil-charts-toolbar.component.ts","ng://neurasil-charts/lib/neurasil-charts.module.ts"],"sourcesContent":["export enum NEURASIL_CHART_TYPE {\r\n    BAR = 0,\r\n    BAR_LINE = 1,\r\n    STACKED = 2,\r\n    LINE = 3,\r\n    PIE = 4,\r\n    DONUT = 5,\r\n    GRID = 6,\r\n    HORIZONTAL_BAR = 7,\r\n    STACKED_PARETO = 9\r\n}","import { Injectable } from '@angular/core';\nimport { NEURASIL_CHART_TYPE } from './models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NeurasilChartsService {\n\n  constructor() { }\n\n\n  parseDataFromDatasource(chartType: NEURASIL_CHART_TYPE, incomingData: Array<any>, swapLabelsAndDatasets: boolean): { _cornerstone: string, _formatObject: { prefix: string, suffix: string }, data: Array<any> } {\n    let returnData = {\n      _cornerstone: \"\",\n      _formatObject: null,\n      data: null\n    }\n\n    let data = JSON.parse(JSON.stringify(incomingData)); // make a copy of the data\n\n    let k_arr_Temp = Object.keys(data[0]);\n\n\n    let k_arr = Object.keys(data[0]);\n    let cDat = {};\n    for (let i = 0; i < k_arr.length; i++) {\n      let currKey = k_arr[i]\n      cDat[currKey] = [];\n      for (var j in data) {\n        cDat[k_arr[i]].push(data[j][currKey]);\n      }\n    }\n\n\n    let formatObj = {};\n    let k_arr_new = Object.keys(cDat);\n    returnData._cornerstone = k_arr_new[0];\n\n    for (let i = 0; i < k_arr_new.length; i++) { // for each key in formatted object\n      let currKey = k_arr_new[i];\n      formatObj[currKey] = {};\n      if (currKey != returnData._cornerstone) {\n        let testItem;\n        for (var j in cDat[currKey]) {\n          if (cDat[currKey][j]) { // set test item and break if the value is not null\n            testItem = cDat[currKey][j];\n            break;\n          }\n        }\n\n        let prefix = \"\";\n        let suffix = \"\";\n        if (testItem) {\n          if (!isNumber(testItem)) {\n            if (isNumber(testItem.substr(1))) {\n              prefix = testItem.substr(0, 1);\n\n            } else if (isNumber(testItem.substr(0, testItem.length - 1))) {\n              suffix = testItem.substr(testItem.length - 1);\n            }\n          }\n        }\n\n        formatObj[currKey] = {\n          prefix: prefix,\n          suffix: suffix\n        }\n\n        // format each data in the individual arrays\n        for (var k in cDat[currKey]) {\n          if (prefix != \"\") {\n            cDat[currKey][k] = cDat[currKey][k].replace(prefix, \"\");\n          }\n          if (suffix != \"\") {\n            cDat[currKey][k] = cDat[currKey][k].replace(suffix, \"\");\n          }\n\n          //newStr = cDat\n          //replaceData.push()\n        }\n\n      } else if (currKey == returnData._cornerstone) {\n        formatObj[currKey] = {\n          prefix: \"\",\n          suffix: \"\"\n        }\n      }\n\n    }\n\n\n    if (!swapLabelsAndDatasets) {\n      // do nothing;\n      // return cDat;\n    }\n    else {\n      let cDat_New = {};\n\n      cDat_New[returnData._cornerstone] = Object.keys(cDat);\n      let index = cDat_New[returnData._cornerstone].indexOf(returnData._cornerstone);\n      if (index > -1) {\n        cDat_New[returnData._cornerstone].splice(index, 1);\n      }\n      for (let i = 0; i < cDat[returnData._cornerstone].length; i++) {\n        cDat_New[cDat[returnData._cornerstone][i]] = [];\n        for (var j in cDat_New[returnData._cornerstone]) {\n          cDat_New[cDat[returnData._cornerstone][i]].push(cDat[cDat_New[returnData._cornerstone][j]][i])\n        }\n      }\n      //return cDat_New;\n      cDat = cDat_New; // reassign to cDat\n    }\n\n\n    if (chartType == NEURASIL_CHART_TYPE.STACKED_PARETO) {\n      // Add suffixes to auto-generated lines\n      formatObj[\"Pareto\"] = {\n        prefix: \"\",\n        suffix: \"%\"\n      }\n      formatObj[\"80% line\"] = {\n        prefix: \"\",\n        suffix: \"%\"\n      }\n    }\n\n    function isNumber(value: string | number): boolean {\n      return ((value != null) && !isNaN(Number(value.toString())));\n    }\n\n    returnData._formatObject = formatObj;\n    returnData.data = cDat;\n    //console.log(cDat);\n    return returnData;\n  }\n\n\n  chartObjectBuilder(chartType, chartData, useAltAxis, title, yAxisLabelText, yAxisLabelText_Alt, xAxisLabelText, cornerstone, swapLabelsAndDatasets, formatObject) {\n    //const chartTypes = NexusChartjsChart.chartTypes;\n    if ((chartType == NEURASIL_CHART_TYPE.BAR || chartType == NEURASIL_CHART_TYPE.HORIZONTAL_BAR || chartType == NEURASIL_CHART_TYPE.LINE || chartType == NEURASIL_CHART_TYPE.STACKED || chartType == NEURASIL_CHART_TYPE.PIE || chartType == NEURASIL_CHART_TYPE.DONUT) && useAltAxis == true) {\n      console.warn(\"You have enabled alternate axis on a (unsupported) chart type. It has been set to false\");\n      useAltAxis = false;\n    }\n\n    if (chartType == NEURASIL_CHART_TYPE.STACKED_PARETO) {\n      yAxisLabelText_Alt = \"Pareto %\";\n    }\n\n    let options: any = {\n      maintainAspectRatio: false,\n      responsive: true,\n    };\n    if (title) {\n      options.title = {\n        display: true,\n        text: title\n      }\n    }\n\n    let yAxisLabel = { display: false, labelString: \"\" }\n    if (yAxisLabelText) {\n      yAxisLabel.display = true;\n      yAxisLabel.labelString = yAxisLabelText;\n    }\n\n    let yAxisLabel_Alt = { display: false, labelString: \"\" }\n    if (yAxisLabelText_Alt) {\n      yAxisLabel_Alt.display = true;\n      yAxisLabel_Alt.labelString = yAxisLabelText_Alt;\n    }\n\n    let xAxisLabel = { display: false, labelString: \"\" };\n    if (xAxisLabelText) {\n      xAxisLabel.display = true;\n      xAxisLabel.labelString = xAxisLabelText;\n    }\n\n    if (chartType != NEURASIL_CHART_TYPE.PIE && chartType != NEURASIL_CHART_TYPE.DONUT) {\n      if (chartType == NEURASIL_CHART_TYPE.STACKED || chartType == NEURASIL_CHART_TYPE.STACKED_PARETO) {\n\n        options.scales = {\n          xAxes: [{\n            stacked: true,\n            scaleLabel: xAxisLabel\n          }],\n          yAxes: [{\n            stacked: true,\n            scaleLabel: yAxisLabel\n          }]\n        }\n\n        if (chartType == NEURASIL_CHART_TYPE.STACKED_PARETO) {\n          let altAxisObj: any = {\n            id: 'yAxis-alt',\n            display: 'auto',\n            ticks: {\n              beginAtZero: true,\n            },\n            position: 'right',\n            scaleLabel: yAxisLabel_Alt\n          }\n          altAxisObj.ticks.min = 0;\n          altAxisObj.ticks.max = 100;\n          altAxisObj.ticks.stepSize = 80\n\n          options.scales.yAxes.push(altAxisObj)\n\n        }\n\n      } else {\n        options.scales = {\n          xAxes: [{\n            scaleLabel: xAxisLabel\n          }],\n          yAxes: [{\n            id: 'yAxis',\n            ticks: {\n              beginAtZero: true,\n            },\n            scaleLabel: yAxisLabel\n          },]\n        }\n\n        if (useAltAxis) {\n          let altAxisObj: any = {\n            id: 'yAxis-alt',\n            display: 'auto',\n            ticks: {\n              beginAtZero: true,\n            },\n            position: 'right',\n            scaleLabel: yAxisLabel_Alt\n          }\n          if (chartType == NEURASIL_CHART_TYPE.STACKED_PARETO) {\n            altAxisObj.ticks.min = 0;\n            altAxisObj.ticks.max = 100;\n            altAxisObj.ticks.stepSize = 80\n          }\n          options.scales.yAxes.push(altAxisObj)\n\n        }\n      }\n    }\n\n    let type;\n    if (chartType == NEURASIL_CHART_TYPE.LINE) {\n      type = 'line'\n    } else if (chartType == NEURASIL_CHART_TYPE.BAR ||\n      chartType == NEURASIL_CHART_TYPE.BAR_LINE ||\n      chartType == NEURASIL_CHART_TYPE.STACKED ||\n      chartType == NEURASIL_CHART_TYPE.STACKED_PARETO) {\n      type = 'bar'\n    } else if (chartType == NEURASIL_CHART_TYPE.HORIZONTAL_BAR) {\n      type = 'horizontalBar'\n    } else if (chartType == NEURASIL_CHART_TYPE.PIE) {\n      type = 'pie'\n    }\n    else if (chartType == NEURASIL_CHART_TYPE.DONUT) {\n      type = 'doughnut'\n    }\n\n\n    let THIS = this;\n\n    // tooltip & title prefix/suffix addition. Title uses default configs for bar /line\n    options.tooltips = {};\n    options.tooltips.callbacks = {};\n\n    if (chartType == NEURASIL_CHART_TYPE.BAR ||\n      chartType == NEURASIL_CHART_TYPE.BAR_LINE ||\n      chartType == NEURASIL_CHART_TYPE.LINE ||\n      chartType == NEURASIL_CHART_TYPE.STACKED ||\n      chartType == NEURASIL_CHART_TYPE.STACKED_PARETO) {\n      options.tooltips.callbacks.label = function (tooltipItem, data) {\n        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n        if (label) {\n          label += ': ';\n        }\n        if (swapLabelsAndDatasets) {\n          label += `${formatObject[tooltipItem.xLabel].prefix}` + tooltipItem.yLabel + `${formatObject[tooltipItem.xLabel].suffix}`;\n        } else {\n\n          let objKeys = Object.keys(formatObject);\n          let key = objKeys[tooltipItem.datasetIndex + 1]\n          let formatObj = formatObject[key];\n          label += `${formatObj.prefix}` + tooltipItem.yLabel + `${formatObj.suffix}`;;\n        }\n        return label;\n      }\n    } else if (chartType == NEURASIL_CHART_TYPE.PIE || chartType == NEURASIL_CHART_TYPE.DONUT) {\n      options.tooltips.callbacks.label = function (tooltipItem, data) {\n        var label = data.labels[tooltipItem.index];\n        if (label) {\n          label += ': ';\n        }\n        let formatObj;\n        if (swapLabelsAndDatasets) {\n          formatObj = formatObject[data.labels[tooltipItem.index]];\n\n        } else {\n          formatObj = formatObject[data.datasets[tooltipItem.datasetIndex].label];\n\n        }\n        label += `${formatObj.prefix}${data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index]}${formatObj.suffix}`;\n        return label;\n      }\n      options.tooltips.callbacks.title = function (tooltipItem, data) {\n        return data.datasets[tooltipItem[0].datasetIndex].label;\n      }\n    } else if (chartType == NEURASIL_CHART_TYPE.HORIZONTAL_BAR) {\n      options.tooltips.callbacks.label = function (tooltipItem, data) {\n\n        var label = data.datasets[tooltipItem.datasetIndex].label;\n        if (label) {\n          label += ': ';\n        }\n        let formatObj;\n        if (swapLabelsAndDatasets) {\n          formatObj = formatObject[data.labels[tooltipItem.index]];\n\n        } else {\n          formatObj = formatObject[data.datasets[tooltipItem.datasetIndex].label];\n\n        }\n        label += `${formatObj.prefix}${data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index]}${formatObj.suffix}`;\n        return label;\n      }\n      options.tooltips.callbacks.title = function (tooltipItem, data) {\n\n        return tooltipItem[0].yLabel;\n      }\n    }\n\n\n    let returnOpts = {\n      type: type,\n      data: this.dataParser(chartData, useAltAxis, chartType, cornerstone, swapLabelsAndDatasets),\n      options: options\n    }\n    return returnOpts;\n  }\n\n  dataParser(chartData, useAltAxis /*boolean*/, chartType /*chartType enum*/, cornerstone, swapLabelsAndDatasets) {\n\n    // helper function to get color array for chart. cycles through when \n    function getPalette(opacity, noOfColors) {\n      let colors = [\n        `rgba(199,233,180,${opacity})`,\n        `rgba(127,205,187,${opacity})`,\n        `rgba(65,182,196,${opacity})`,\n        `rgba(29,145,192,${opacity})`,\n        `rgba(34,94,168,${opacity})`,\n        `rgba(37,52,148,${opacity})`,\n        `rgba(8,29,88,${opacity})`,\n        `rgba(254,178,76,${opacity})`,\n        `rgba(253,141,60,${opacity})`,\n        `rgba(252,78,42,${opacity})`,\n        `rgba(227,26,28,${opacity})`,\n        `rgba(189,0,38,${opacity})`,\n        `rgba(128,0,38,${opacity})`\n      ];\n\n      if (noOfColors > colors.length) { // if more colors are required than available, cycle through beginning again\n        let diff = noOfColors - colors.length;\n        let colorsLength = colors.length;\n        for (var i = 0; i <= diff; i) { // NO INCREMENT HERE\n          for (var j = 0; j < colorsLength; j++) {\n            colors.push(colors[j])\n            i++; // INCREMENT HERE\n          }\n        }\n      }\n\n      return colors;\n    }\n\n    let colorPalatte;\n    let bgColorPalatte\n    if (!swapLabelsAndDatasets) {\n      colorPalatte = getPalette(1, chartData[cornerstone].length)\n      bgColorPalatte = getPalette(0.3, chartData[cornerstone].length)\n    } else {\n      colorPalatte = getPalette(1, Object.keys(chartData).length)\n      bgColorPalatte = getPalette(0.3, Object.keys(chartData).length)\n    }\n\n\n\n    let dataSets = [];\n    let objKeys = Object.keys(chartData);\n    let index = objKeys.indexOf(cornerstone);\n    if (index > -1) {\n      objKeys.splice(index, 1);\n    }\n\n\n    for (let i = 0; i < objKeys.length; i++) {\n\n      let yAxis = 'yAxis';\n      if (useAltAxis) {\n        if (i > 0) {\n          yAxis += '-alt';\n        }\n      }\n\n      let dataSet: any = {\n        label: objKeys[i],\n        data: chartData[objKeys[i]],\n        backgroundColor: bgColorPalatte[i],\n        borderColor: colorPalatte[i],\n        borderWidth: 2\n      };\n\n\n      if (chartType == NEURASIL_CHART_TYPE.BAR_LINE) { // ignores stacked and bar options. Makes assumption that only 1st dataset is bar\n        if (i == 0) {\n          dataSet.type = 'bar';\n        } else {\n          dataSet.type = 'line';\n        }\n      }\n\n\n\n\n      if (chartType == NEURASIL_CHART_TYPE.BAR || chartType == NEURASIL_CHART_TYPE.HORIZONTAL_BAR || chartType == NEURASIL_CHART_TYPE.STACKED || chartType == NEURASIL_CHART_TYPE.STACKED_PARETO) {\n        dataSet.backgroundColor = bgColorPalatte[i];\n        dataSet.borderColor = colorPalatte[i];\n      } else if (chartType == NEURASIL_CHART_TYPE.BAR_LINE || chartType == NEURASIL_CHART_TYPE.LINE) {\n        if (dataSet.type == 'bar') {\n          dataSet.backgroundColor = bgColorPalatte[i];\n          dataSet.borderColor = colorPalatte[i];\n        } else {\n          dataSet.borderColor = colorPalatte[i];\n          dataSet.backgroundColor = 'rgba(0,0,0,0)';\n        }\n      } else if (chartType == NEURASIL_CHART_TYPE.PIE || chartType == NEURASIL_CHART_TYPE.DONUT) {// overwrite single color assignment to array.\n        dataSet.backgroundColor = bgColorPalatte;\n        dataSet.borderColor = colorPalatte;\n      }\n\n\n      if (chartType != NEURASIL_CHART_TYPE.PIE && chartType != NEURASIL_CHART_TYPE.DONUT) {\n        if (chartType != NEURASIL_CHART_TYPE.STACKED && chartType != NEURASIL_CHART_TYPE.STACKED_PARETO) {\n          dataSet.yAxisID = yAxis;\n        }\n      }\n\n      dataSets.push(dataSet);\n    }\n    let returnData = {\n      labels: chartData[cornerstone],\n      datasets: dataSets\n    }\n    return returnData;\n  }\n\n  performParetoAnalysis(props){\n    //modify chart object\n    let localSumArr = [];\n    let totalSum = 0;\n    for (let j = 0; j < props.data.datasets[0].data.length; j++) {\n      let sum = 0;\n      for (let i = 0; i < props.data.datasets.length; i++) {\n        let val = parseFloat(props.data.datasets[i].data[j]);\n        if (isNaN(val)) {\n          val = 0;\n        }\n        sum += val\n      }\n      localSumArr.push(sum);\n      totalSum += sum;\n    }\n\n    //sort data by local sum\n    let newArr = [];\n    for (let i = 0; i < localSumArr.length; i++) {\n      let o = {\n        sum: localSumArr[i],\n        labels: props.data.labels[i],\n      }\n      for (let j = 0; j < props.data.datasets.length; j++) {\n        o[j] = props.data.datasets[j].data[i];\n      }\n      newArr.push(o)\n    }\n\n    //sort descending\n    newArr.sort(function (a, b) {\n      return ((a.sum < b.sum) ? 1 : ((a.sum == b.sum) ? 0 : -1));\n    });\n\n    //rebuild and reassign labels array\n    let newLabelsArray = []\n    for (let i =0; i < newArr.length; i++){\n      newLabelsArray.push(newArr[i][\"labels\"]);\n    }\n    props.data.labels = newLabelsArray;\n\n    //rebuild and reassign data array for each dataset\n\n    for (let j = 0; j < props.data.datasets.length; j++) {\n      let data = [];\n      for (let i = 0; i < newArr.length; i++){\n        data.push(newArr[i][j])\n      }\n      props.data.datasets[j].data = data;\n    }\n\n    let sortedlocalSumArr = [];\n    for (let i = 0 ; i < newArr.length; i++){\n      sortedlocalSumArr.push(newArr[i].sum)\n    }\n\n\n    // calculate and push pareto line, also populate 80%line array\n    let rollingSum = 0;\n    let paretoLineValues = [];\n    let eightyPercentLine = [];\n\n    for (let i = 0 ; i < sortedlocalSumArr.length; i++){\n      rollingSum += sortedlocalSumArr[i];\n      let paretoVal = rollingSum/totalSum * 100;\n      paretoLineValues.push( Math.floor(paretoVal * 100) / 100 );\n      eightyPercentLine.push(80)\n    }\n    props.data.datasets.push({\n      \"label\":\"Pareto\",\n      \"data\":paretoLineValues,\n      \"backgroundColor\":\"rgba(0,0,0,0)\",\n      \"borderColor\":\"rgba(0,0,0,0.8)\",\n      \"borderWidth\":2,\n      \"type\":\"line\",\n      \"yAxisID\":\"yAxis-alt\"\n    })\n    // push 80% line\n    props.data.datasets.push({\n      \"label\":\"80% line\",\n      \"data\":eightyPercentLine,\n      \"backgroundColor\":\"rgba(0,0,0,0)\",\n      \"borderColor\":\"rgba(0,0,0,0.8)\",\n      \"borderWidth\":2,\n      \"type\":\"line\",\n      \"yAxisID\":\"yAxis-alt\"\n    })\n  }\n\n    // unused. Migrated code to NeurasilDataFilterPipe\n  // filterData(data: Array<any>, datasetFilter: string) {\n\n  //   if (datasetFilter) {\n  //     let filterTerms = datasetFilter.split(',');\n  //     let includeTerms = [];\n  //     let excludeTerms = [];\n  //     let includeColumns = [];\n  //     let excludeColumns = [];\n  //     for (let i in filterTerms) {\n  //       if (filterTerms[i] != null && filterTerms[i] != undefined && filterTerms[i].length > 1) {\n  //         let term = filterTerms[i].trim().toLowerCase();\n  //         if (term[0] == \"-\") {\n  //           excludeTerms.push(term.replace(\"-\", \"\").trim());\n  //         } else if (term[0] == \"~\") {\n  //           if (term[1] == \"!\") {\n  //             excludeColumns.push(term.replace(\"~!\", \"\").trim());\n  //           } else {\n  //             includeColumns.push(term.replace(\"~\", \"\").trim())\n  //           }\n  //         } else {\n  //           includeTerms.push(term.trim())\n  //         }\n  //       }\n  //     }\n\n\n  //     let data_Filtered = data.filter(function (dataItem) {\n  //       let k_arr = Object.keys(dataItem);\n  //       let searchString = \"\";\n  //       for (let i in k_arr) {\n  //         let currKey = k_arr[i];\n  //         let value = dataItem[currKey];\n  //         searchString += value + \" \";\n  //       }\n  //       searchString = searchString.toLowerCase().trim();\n  //       let currentPassingStatus = false;\n  //       if (includeTerms.length > 0) {\n  //         for (let i in includeTerms) {\n  //           if (searchString.includes(includeTerms[i])) {\n  //             currentPassingStatus = true;\n  //             break;\n  //           }\n  //         }\n  //       } else {\n  //         currentPassingStatus = true;\n  //       }\n  //       if (excludeTerms.length > 0 && currentPassingStatus) {\n  //         for (let i in excludeTerms) {\n  //           if (searchString.includes(excludeTerms[i])) {\n  //             currentPassingStatus = false;\n  //             break;\n  //           }\n  //         }\n  //       }\n  //       if (currentPassingStatus) {\n\n  //         return dataItem;\n  //       }\n  //     });\n\n  //     if (includeColumns.length > 0 && excludeColumns.length > 0) {\n  //       window.alert(\"Unsupported usage of include & exclude columns. Things may break\")\n  //     }\n  //     //after filtering is complete, remove columns from clone of data\n  //     else if (excludeColumns.length > 0) {\n  //       data_Filtered = JSON.parse(JSON.stringify(data_Filtered))\n  //       //console.log(\"here\")\n  //       for (var h in data_Filtered) {\n  //         let dataItem = data_Filtered[h];\n  //         let k_arr = Object.keys(dataItem);\n  //         //for (let i in k_arr) {\n  //         for (let i = 0; i < k_arr.length; i++) {\n  //           if (i > 0) {// skip the first column. Do not allow user to delete first column\n  //             for (var j in excludeColumns) {\n  //               let processedKey = k_arr[i].trim().toLowerCase();\n  //               if (processedKey.includes(excludeColumns[j])) {\n  //                 delete dataItem[k_arr[i]];\n  //               }\n  //             }\n  //           }\n  //         }\n  //       }\n  //     }\n\n  //     else if (includeColumns.length > 0) {\n  //       data_Filtered = JSON.parse(JSON.stringify(data_Filtered));\n  //       for (var h in data_Filtered) {\n  //         let dataItem = data_Filtered[h];\n  //         let k_arr = Object.keys(dataItem);\n  //         for (let i = 0; i < k_arr.length; i++) {\n  //           if (i > 0) {// skip the first column. Needed?\n  //             let processedKey = k_arr[i].trim().toLowerCase();\n  //             let keepColumn = false;\n  //             for (var j in includeColumns) {\n  //               if (processedKey.includes(includeColumns[j])) {\n  //                 keepColumn = true;\n  //               }\n  //               // if (!processedKey.includes(includeColumns[j])) {\n  //               //     delete dataItem[k_arr[i]];\n  //               // }\n  //             }\n  //             if (!keepColumn) {\n  //               delete dataItem[k_arr[i]];\n  //             }\n  //           }\n  //         }\n  //       }\n  //     }\n\n  //     return data_Filtered;\n  //   }\n  //   return data; // if no filter, return original data\n  // }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'neurasilDataFilter',\n  pure: true\n})\nexport class NeurasilDataFilter implements PipeTransform {\n\n  transform(data: any[], filterText: string): any {\n    if (filterText === \"\" || filterText === null || filterText === undefined) {\n      return data;\n    } else {\n      if (filterText) {\n        let filterTerms = filterText.split(',');\n        let includeTerms = [];\n        let excludeTerms = [];\n        let includeColumns = [];\n        let excludeColumns = [];\n        for (let i in filterTerms) {\n          if (filterTerms[i] != null && filterTerms[i] != undefined && filterTerms[i].length > 1) {\n            let term = filterTerms[i].trim().toLowerCase();\n            if (term[0] == \"-\") {\n              excludeTerms.push(term.replace(\"-\", \"\").trim());\n            } else if (term[0] == \"~\") {\n              if (term[1] == \"!\") {\n                excludeColumns.push(term.replace(\"~!\", \"\").trim());\n              } else {\n                includeColumns.push(term.replace(\"~\", \"\").trim())\n              }\n            } else {\n              includeTerms.push(term.trim())\n            }\n          }\n        }\n\n\n        let data_Filtered = data.filter(function (dataItem) {\n          let k_arr = Object.keys(dataItem);\n          let searchString = \"\";\n          for (let i in k_arr) {\n            let currKey = k_arr[i];\n            let value = dataItem[currKey];\n            searchString += value + \" \";\n          }\n          searchString = searchString.toLowerCase().trim();\n          let currentPassingStatus = false;\n          if (includeTerms.length > 0) {\n            for (let i in includeTerms) {\n              if (searchString.includes(includeTerms[i])) {\n                currentPassingStatus = true;\n                break;\n              }\n            }\n          } else {\n            currentPassingStatus = true;\n          }\n          if (excludeTerms.length > 0 && currentPassingStatus) {\n            for (let i in excludeTerms) {\n              if (searchString.includes(excludeTerms[i])) {\n                currentPassingStatus = false;\n                break;\n              }\n            }\n          }\n          if (currentPassingStatus) {\n\n            return dataItem;\n          }\n        });\n\n        if (includeColumns.length > 0 && excludeColumns.length > 0) {\n          window.alert(\"Unsupported usage of include & exclude columns. Things may break\")\n        }\n        //after filtering is complete, remove columns from clone of data\n        else if (excludeColumns.length > 0) {\n          data_Filtered = JSON.parse(JSON.stringify(data_Filtered))\n          //console.log(\"here\")\n          for (var h in data_Filtered) {\n            let dataItem = data_Filtered[h];\n            let k_arr = Object.keys(dataItem);\n            //for (let i in k_arr) {\n            for (let i = 0; i < k_arr.length; i++) {\n              if (i > 0) {// skip the first column. Do not allow user to delete first column\n                for (var j in excludeColumns) {\n                  let processedKey = k_arr[i].trim().toLowerCase();\n                  if (processedKey.includes(excludeColumns[j])) {\n                    delete dataItem[k_arr[i]];\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        else if (includeColumns.length > 0) {\n          data_Filtered = JSON.parse(JSON.stringify(data_Filtered));\n          for (var h in data_Filtered) {\n            let dataItem = data_Filtered[h];\n            let k_arr = Object.keys(dataItem);\n            for (let i = 0; i < k_arr.length; i++) {\n              if (i > 0) {// skip the first column. Needed?\n                let processedKey = k_arr[i].trim().toLowerCase();\n                let keepColumn = false;\n                for (var j in includeColumns) {\n                  if (processedKey.includes(includeColumns[j])) {\n                    keepColumn = true;\n                  }\n                  // if (!processedKey.includes(includeColumns[j])) {\n                  //     delete dataItem[k_arr[i]];\n                  // }\n                }\n                if (!keepColumn) {\n                  delete dataItem[k_arr[i]];\n                }\n              }\n            }\n          }\n        }\n\n        return data_Filtered;\n      }\n      return data; // if no filter, return original data\n    }\n  }\n\n}\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, Input, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { NeurasilChartsService } from './neurasil-charts.service';\nimport { NEURASIL_CHART_TYPE } from './models';\nimport { NeurasilDataFilter } from './pipes';\n\nimport * as Chart from 'chart.js';\n\n@Component({\n  selector: 'neurasil-charts',\n  templateUrl: './neurasil-charts.component.html',\n  styleUrls: ['./neurasil-charts.component.sass'],\n  providers: [NeurasilDataFilter]\n})\nexport class NeurasilChartsComponent implements OnInit, AfterViewInit, OnChanges {\n\n  @ViewChild('neurasilChartCanvas', { static: false }) canvas: ElementRef;\n\n  /**\n   * Data to plot\n   */\n  @Input() data: Array<any>;\n\n  @Input() showToolbar: boolean = true;\n  @Output() showToolbarChange = new EventEmitter();\n  /**\n   * User-defined default chart type\n   */\n  @Input() chartType: NEURASIL_CHART_TYPE;\n  @Output() chartTypeChange = new EventEmitter();\n\n  @Input() useAltAxis: boolean = true; // not sure if needed\n  @Input() chartTitle: string = \"\";\n  @Input() xAxisLabelText: string = \"\";\n  @Input() yAxisLabelText_Alt: string = \"\";\n  @Input() yAxisLabelText: string = \"\";\n\n  @Input() swapLabelsAndDatasets: boolean;\n  @Output() swapLabelsAndDatasetsChange = new EventEmitter();\n  @Input() globalFilter: string = \"\";\n\n  toolbarProps = {\n    chartType: this.chartType ? this.chartType : NEURASIL_CHART_TYPE.BAR,\n    _datasetFilter: \"\",\n    swapLabelsAndDatasets: false\n  };\n\n  _canvas: any;\n  hasData: boolean; // for the purpose of checking length in html template\n\n\n  constructor(public neurasilChartsService: NeurasilChartsService, public neurasilDataFilter: NeurasilDataFilter) { }\n\n  ngOnInit() {\n    if (this.chartType) {\n      this.toolbarProps.chartType = this.chartType;\n    }\n\n    if (this.swapLabelsAndDatasets) {\n      this.toolbarProps.swapLabelsAndDatasets = this.swapLabelsAndDatasets\n    }\n\n    this.hasData = (this.data && this.data.length > 0);\n  }\n  ngAfterViewInit() {\n    this.drawChart();\n  }\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes) {\n      console.log(changes) \n      this.drawChart();\n    }\n  }\n\n  updateToolbarProps(ev) {\n    console.log(\">>>\" , ev)\n    console.log(this.toolbarProps)\n    this.chartTypeChange.emit(this.toolbarProps.chartType);\n    this.showToolbarChange.emit(this.showToolbar);\n    this.swapLabelsAndDatasetsChange.emit(this.toolbarProps.swapLabelsAndDatasets)\n    this.drawChart();\n  }\n\n\n  drawChart() {\n    if (this._canvas) {\n      this._canvas.destroy();\n    }\n    if (this.canvas) {\n      var ctx = this.canvas.nativeElement.getContext('2d');\n      let filterString = \"\"\n      if (this.globalFilter.length > 0) {\n        filterString += this.globalFilter + \",\"\n      }\n      filterString += this.toolbarProps._datasetFilter;\n      let filteredData = this.neurasilDataFilter.transform(this.data, filterString);\n      console.log(filteredData);\n      this.hasData = (filteredData && filteredData.length > 0);\n      if (this.hasData) {\n        let o = this.neurasilChartsService.parseDataFromDatasource(this.toolbarProps.chartType, filteredData, this.toolbarProps.swapLabelsAndDatasets);\n        let props = this.neurasilChartsService.chartObjectBuilder(this.toolbarProps.chartType, o.data, this.useAltAxis, this.chartTitle, this.yAxisLabelText, this.yAxisLabelText_Alt, this.xAxisLabelText, o._cornerstone, this.toolbarProps.swapLabelsAndDatasets, o._formatObject);\n        if (this.toolbarProps.chartType == NEURASIL_CHART_TYPE.STACKED_PARETO) {\n          this.neurasilChartsService.performParetoAnalysis(props); // modify chart props object\n        }\n        this._canvas = new Chart(ctx, props);\n      }\n    }\n  }\n}\n","import { Component,Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { NEURASIL_CHART_TYPE } from '../models/NeurasilChartType'\r\n\r\n@Component({\r\n  selector: 'neurasil-charts-toolbar',\r\n  templateUrl: './neurasil-charts-toolbar.component.html',\r\n  styleUrls: ['./neurasil-charts-toolbar.component.sass']\r\n})\r\nexport class NeurasilChartsToolbarComponent {\r\n  @Input() toolbarProps;\r\n  @Output() toolbarPropsChange = new EventEmitter<any>();\r\n  NEURASIL_CHART_TYPE = NEURASIL_CHART_TYPE;\r\n  toolbarPropsChanged(ev){\r\n    //console.log(ev)\r\n    this.toolbarPropsChange.emit(this.toolbarProps);\r\n  }\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NeurasilChartsToolbarComponent } from './neurasil-charts-toolbar/neurasil-charts-toolbar.component'\nimport { NeurasilChartsComponent } from './neurasil-charts.component';\nimport { NeurasilDataFilter } from './pipes/neurasil-data-filter/neurasil-data-filter.pipe';\n\n@NgModule({\n  declarations: [\n    NeurasilChartsComponent,\n    NeurasilChartsToolbarComponent,\n    NeurasilDataFilter\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [NeurasilChartsComponent,NeurasilDataFilter]\n})\nexport class NeurasilChartsModule { }\n"],"names":[],"mappings":"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"}