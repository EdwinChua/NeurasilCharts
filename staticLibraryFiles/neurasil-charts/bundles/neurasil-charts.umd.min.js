!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("chart.js"),require("@angular/common"),require("@angular/forms")):"function"==typeof define&&define.amd?define("neurasil-charts",["exports","@angular/core","chart.js","@angular/common","@angular/forms"],e):e((t=t||self)["neurasil-charts"]={},t.ng.core,t.Chart,t.ng.common,t.ng.forms)}(this,(function(t,e,a,r,o){"use strict";var s={BAR:0,BAR_LINE:1,STACKED:2,LINE:3,PIE:4,DONUT:5,GRID:6,HORIZONTAL_BAR:7,STACKED_PARETO:9};s[s.BAR]="BAR",s[s.BAR_LINE]="BAR_LINE",s[s.STACKED]="STACKED",s[s.LINE]="LINE",s[s.PIE]="PIE",s[s.DONUT]="DONUT",s[s.GRID]="GRID",s[s.HORIZONTAL_BAR]="HORIZONTAL_BAR",s[s.STACKED_PARETO]="STACKED_PARETO";var n=function(){function t(){}return t.prototype.parseDataFromDatasource=function(t,e,a){for(var r={_cornerstone:"",_formatObject:null,data:null},o=JSON.parse(JSON.stringify(e)),n=(Object.keys(o[0]),Object.keys(o[0])),i={},l=0;l<n.length;l++){var p=n[l];for(var d in i[p]=[],o)i[n[l]].push(o[d][p])}var c={},h=Object.keys(i);r._cornerstone=h[0];for(l=0;l<h.length;l++){if(c[p=h[l]]={},p!=r._cornerstone){var u=void 0;for(var d in i[p])if(i[p][d]){u=i[p][d];break}var b="",f="";for(var g in u&&(y(u)||(y(u.substr(1))?b=u.substr(0,1):y(u.substr(0,u.length-1))&&(f=u.substr(u.length-1)))),c[p]={prefix:b,suffix:f},i[p])""!=b&&(i[p][g]=i[p][g].replace(b,"")),""!=f&&(i[p][g]=i[p][g].replace(f,""))}else p==r._cornerstone&&(c[p]={prefix:"",suffix:""})}if(a){var v={};v[r._cornerstone]=Object.keys(i);var x=v[r._cornerstone].indexOf(r._cornerstone);x>-1&&v[r._cornerstone].splice(x,1);for(l=0;l<i[r._cornerstone].length;l++)for(var d in v[i[r._cornerstone][l]]=[],v[r._cornerstone])v[i[r._cornerstone][l]].push(i[v[r._cornerstone][d]][l]);i=v}else;function y(t){return null!=t&&!isNaN(Number(t.toString()))}return t==s.STACKED_PARETO&&(c.Pareto={prefix:"",suffix:"%"},c["80% line"]={prefix:"",suffix:"%"}),r._formatObject=c,r.data=i,r},t.prototype.chartObjectBuilder=function(t,e,a,r,o,n,i,l,p,d){t!=s.BAR&&t!=s.HORIZONTAL_BAR&&t!=s.LINE&&t!=s.STACKED&&t!=s.PIE&&t!=s.DONUT||1!=a||(console.warn("You have enabled alternate axis on a (unsupported) chart type. It has been set to false"),a=!1),t==s.STACKED_PARETO&&(n="Pareto %");var c={maintainAspectRatio:!1,responsive:!0};r&&(c.title={display:!0,text:r});var h={display:!1,labelString:""};o&&(h.display=!0,h.labelString=o);var u={display:!1,labelString:""};n&&(u.display=!0,u.labelString=n);var b,f={display:!1,labelString:""};if(i&&(f.display=!0,f.labelString=i),t!=s.PIE&&t!=s.DONUT)if(t==s.STACKED||t==s.STACKED_PARETO)c.scales={xAxes:[{stacked:!0,scaleLabel:f}],yAxes:[{stacked:!0,scaleLabel:h}]},t==s.STACKED_PARETO&&((g={id:"yAxis-alt",display:"auto",ticks:{beginAtZero:!0},position:"right",scaleLabel:u}).ticks.min=0,g.ticks.max=100,g.ticks.stepSize=80,c.scales.yAxes.push(g));else if(c.scales={xAxes:[{scaleLabel:f}],yAxes:[{id:"yAxis",ticks:{beginAtZero:!0},scaleLabel:h}]},a){var g={id:"yAxis-alt",display:"auto",ticks:{beginAtZero:!0},position:"right",scaleLabel:u};t==s.STACKED_PARETO&&(g.ticks.min=0,g.ticks.max=100,g.ticks.stepSize=80),c.scales.yAxes.push(g)}t==s.LINE?b="line":t==s.BAR||t==s.BAR_LINE||t==s.STACKED||t==s.STACKED_PARETO?b="bar":t==s.HORIZONTAL_BAR?b="horizontalBar":t==s.PIE?b="pie":t==s.DONUT&&(b="doughnut");return c.tooltips={},c.tooltips.callbacks={},t==s.BAR||t==s.BAR_LINE||t==s.LINE||t==s.STACKED||t==s.STACKED_PARETO?c.tooltips.callbacks.label=function(t,e){var a=e.datasets[t.datasetIndex].label||"";if(a&&(a+=": "),p)a+=""+d[t.xLabel].prefix+t.yLabel+d[t.xLabel].suffix;else{var r=Object.keys(d)[t.datasetIndex+1],o=d[r];a+=""+o.prefix+t.yLabel+o.suffix}return a}:t==s.PIE||t==s.DONUT?(c.tooltips.callbacks.label=function(t,e){var a,r=e.labels[t.index];return r&&(r+=": "),r+=""+(a=p?d[e.labels[t.index]]:d[e.datasets[t.datasetIndex].label]).prefix+e.datasets[t.datasetIndex].data[t.index]+a.suffix},c.tooltips.callbacks.title=function(t,e){return e.datasets[t[0].datasetIndex].label}):t==s.HORIZONTAL_BAR&&(c.tooltips.callbacks.label=function(t,e){var a,r=e.datasets[t.datasetIndex].label;return r&&(r+=": "),r+=""+(a=p?d[e.labels[t.index]]:d[e.datasets[t.datasetIndex].label]).prefix+e.datasets[t.datasetIndex].data[t.index]+a.suffix},c.tooltips.callbacks.title=function(t,e){return t[0].yLabel}),{type:b,data:this.dataParser(e,a,t,l,p),options:c}},t.prototype.dataParser=function(t,e,a,r,o){function n(t,e){var a=["rgba(199,233,180,"+t+")","rgba(127,205,187,"+t+")","rgba(65,182,196,"+t+")","rgba(29,145,192,"+t+")","rgba(34,94,168,"+t+")","rgba(37,52,148,"+t+")","rgba(8,29,88,"+t+")","rgba(254,178,76,"+t+")","rgba(253,141,60,"+t+")","rgba(252,78,42,"+t+")","rgba(227,26,28,"+t+")","rgba(189,0,38,"+t+")","rgba(128,0,38,"+t+")"];if(e>a.length)for(var r=e-a.length,o=a.length,s=0;s<=r;s)for(var n=0;n<o;n++)a.push(a[n]),s++;return a}var i,l;o?(i=n(1,Object.keys(t).length),l=n(.3,Object.keys(t).length)):(i=n(1,t[r].length),l=n(.3,t[r].length));var p=[],d=Object.keys(t),c=d.indexOf(r);c>-1&&d.splice(c,1);for(var h=0;h<d.length;h++){var u="yAxis";e&&h>0&&(u+="-alt");var b={label:d[h],data:t[d[h]],backgroundColor:l[h],borderColor:i[h],borderWidth:2};a==s.BAR_LINE&&(b.type=0==h?"bar":"line"),a==s.BAR||a==s.HORIZONTAL_BAR||a==s.STACKED||a==s.STACKED_PARETO?(b.backgroundColor=l[h],b.borderColor=i[h]):a==s.BAR_LINE||a==s.LINE?"bar"==b.type?(b.backgroundColor=l[h],b.borderColor=i[h]):(b.borderColor=i[h],b.backgroundColor="rgba(0,0,0,0)"):a!=s.PIE&&a!=s.DONUT||(b.backgroundColor=l,b.borderColor=i),a!=s.PIE&&a!=s.DONUT&&a!=s.STACKED&&a!=s.STACKED_PARETO&&(b.yAxisID=u),p.push(b)}return{labels:t[r],datasets:p}},t.prototype.performParetoAnalysis=function(t){for(var e=[],a=0,r=0;r<t.data.datasets[0].data.length;r++){for(var o=0,s=0;s<t.data.datasets.length;s++){var n=parseFloat(t.data.datasets[s].data[r]);isNaN(n)&&(n=0),o+=n}e.push(o),a+=o}var i=[];for(s=0;s<e.length;s++){var l={sum:e[s],labels:t.data.labels[s]};for(r=0;r<t.data.datasets.length;r++)l[r]=t.data.datasets[r].data[s];i.push(l)}i.sort((function(t,e){return t.sum<e.sum?1:t.sum==e.sum?0:-1}));var p=[];for(s=0;s<i.length;s++)p.push(i[s].labels);t.data.labels=p;for(r=0;r<t.data.datasets.length;r++){var d=[];for(s=0;s<i.length;s++)d.push(i[s][r]);t.data.datasets[r].data=d}var c=[];for(s=0;s<i.length;s++)c.push(i[s].sum);var h=0,u=[],b=[];for(s=0;s<c.length;s++){var f=(h+=c[s])/a*100;u.push(Math.floor(100*f)/100),b.push(80)}t.data.datasets.push({label:"Pareto",data:u,backgroundColor:"rgba(0,0,0,0)",borderColor:"rgba(0,0,0,0.8)",borderWidth:2,type:"line",yAxisID:"yAxis-alt"}),t.data.datasets.push({label:"80% line",data:b,backgroundColor:"rgba(0,0,0,0)",borderColor:"rgba(0,0,0,0.8)",borderWidth:2,type:"line",yAxisID:"yAxis-alt"})},t.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[]},t.ngInjectableDef=e.ɵɵdefineInjectable({factory:function(){return new t},token:t,providedIn:"root"}),t}(),i=function(){function t(){}return t.prototype.transform=function(t,e){if(""===e||null==e)return t;if(e){var a=e.split(","),r=[],o=[],s=[],n=[];for(var i in a)if(null!=a[i]&&null!=a[i]&&a[i].length>1){var l=a[i].trim().toLowerCase();"-"==l[0]?o.push(l.replace("-","").trim()):"~"==l[0]?"!"==l[1]?n.push(l.replace("~!","").trim()):s.push(l.replace("~","").trim()):r.push(l.trim())}var p=t.filter((function(t){var e=Object.keys(t),a="";for(var s in e){a+=t[e[s]]+" "}a=a.toLowerCase().trim();var n=!1;if(r.length>0){for(var s in r)if(a.includes(r[s])){n=!0;break}}else n=!0;if(o.length>0&&n)for(var s in o)if(a.includes(o[s])){n=!1;break}if(n)return t}));if(s.length>0&&n.length>0)window.alert("Unsupported usage of include & exclude columns. Things may break");else if(n.length>0)for(var d in p=JSON.parse(JSON.stringify(p))){var c=p[d],h=Object.keys(c);for(i=0;i<h.length;i++)if(i>0)for(var u in n){(b=h[i].trim().toLowerCase()).includes(n[u])&&delete c[h[i]]}}else if(s.length>0)for(var d in p=JSON.parse(JSON.stringify(p)))for(c=p[d],h=Object.keys(c),i=0;i<h.length;i++)if(i>0){var b=h[i].trim().toLowerCase(),f=!1;for(var u in s)b.includes(s[u])&&(f=!0);f||delete c[h[i]]}return p}return t},t.decorators=[{type:e.Pipe,args:[{name:"neurasilDataFilter",pure:!0}]}],t}(),l=function(){function t(t,a){this.neurasilChartsService=t,this.neurasilDataFilter=a,this.showToolbar=!0,this.showToolbarChange=new e.EventEmitter,this.chartTypeChange=new e.EventEmitter,this.useAltAxis=!0,this.chartTitle="",this.xAxisLabelText="",this.yAxisLabelText_Alt="",this.yAxisLabelText="",this.swapLabelsAndDatasetsChange=new e.EventEmitter,this.globalFilter="",this.toolbarProps={chartType:this.chartType?this.chartType:s.BAR,_datasetFilter:"",swapLabelsAndDatasets:!1}}return t.prototype.ngOnInit=function(){this.chartType&&(this.toolbarProps.chartType=this.chartType),this.swapLabelsAndDatasets&&(this.toolbarProps.swapLabelsAndDatasets=this.swapLabelsAndDatasets),this.hasData=this.data&&this.data.length>0},t.prototype.ngAfterViewInit=function(){this.drawChart()},t.prototype.ngOnChanges=function(t){t&&(console.log(t),this.drawChart())},t.prototype.updateToolbarProps=function(t){console.log(">>>",t),console.log(this.toolbarProps),this.chartTypeChange.emit(this.toolbarProps.chartType),this.showToolbarChange.emit(this.showToolbar),this.swapLabelsAndDatasetsChange.emit(this.toolbarProps.swapLabelsAndDatasets),this.drawChart()},t.prototype.drawChart=function(){if(this._canvas&&this._canvas.destroy(),this.canvas){var t=this.canvas.nativeElement.getContext("2d"),e="";this.globalFilter.length>0&&(e+=this.globalFilter+","),e+=this.toolbarProps._datasetFilter;var r=this.neurasilDataFilter.transform(this.data,e);if(console.log(r),this.hasData=r&&r.length>0,this.hasData){var o=this.neurasilChartsService.parseDataFromDatasource(this.toolbarProps.chartType,r,this.toolbarProps.swapLabelsAndDatasets),n=this.neurasilChartsService.chartObjectBuilder(this.toolbarProps.chartType,o.data,this.useAltAxis,this.chartTitle,this.yAxisLabelText,this.yAxisLabelText_Alt,this.xAxisLabelText,o._cornerstone,this.toolbarProps.swapLabelsAndDatasets,o._formatObject);this.toolbarProps.chartType==s.STACKED_PARETO&&this.neurasilChartsService.performParetoAnalysis(n),this._canvas=new a(t,n)}}},t.decorators=[{type:e.Component,args:[{selector:"neurasil-charts",template:'\r\n<div class="component-wrapper">\r\n    <div class="toolbar-wrapper" *ngIf="showToolbar">\r\n        <neurasil-charts-toolbar [(toolbarProps)]="toolbarProps" (toolbarPropsChange)="updateToolbarProps($event)"></neurasil-charts-toolbar>\r\n    </div>\r\n    <div class="canvas-wrapper">\r\n        <canvas [ngClass]="hasData ? \'\' : \'canvas-hidden\'" #neurasilChartCanvas id="neurasilChartCanvas"></canvas>\r\n        <div class="overlay" *ngIf="!hasData">\r\n            <div class="overlay-contents">\r\n                No data to display. Check your filters.\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n',providers:[i],styles:[".canvas-wrapper,neurasil-charts-toolbar{display:block}.component-wrapper{width:100%;display:flex;flex-flow:column;height:100%}.canvas-wrapper{flex-grow:1}.canvas-hidden{display:none}.overlay{width:100%;height:100%;background-color:rgba(0,0,0,.1)}.overlay-contents{font-family:sans-serif;left:50%;float:left;top:50%;transform:translate(-50%,-50%);position:relative}"]}]}],t.ctorParameters=function(){return[{type:n},{type:i}]},t.propDecorators={canvas:[{type:e.ViewChild,args:["neurasilChartCanvas",{static:!1}]}],data:[{type:e.Input}],showToolbar:[{type:e.Input}],showToolbarChange:[{type:e.Output}],chartType:[{type:e.Input}],chartTypeChange:[{type:e.Output}],useAltAxis:[{type:e.Input}],chartTitle:[{type:e.Input}],xAxisLabelText:[{type:e.Input}],yAxisLabelText_Alt:[{type:e.Input}],yAxisLabelText:[{type:e.Input}],swapLabelsAndDatasets:[{type:e.Input}],swapLabelsAndDatasetsChange:[{type:e.Output}],globalFilter:[{type:e.Input}]},t}();var p=function(){function t(){this.toolbarPropsChange=new e.EventEmitter,this.NEURASIL_CHART_TYPE=s}return t.prototype.toolbarPropsChanged=function(t){this.toolbarPropsChange.emit(this.toolbarProps)},t.decorators=[{type:e.Component,args:[{selector:"neurasil-charts-toolbar",template:'<div class="toolbar-container" >\r\n    <div class="toolbar">\r\n        <div class="filter-textbox-container input-group input-group-sm">\r\n            <input type="text" class="filter-textbox form-control noSelect" placeholder="Filters" [(ngModel)]="toolbarProps._datasetFilter" (change)="toolbarPropsChanged($event)">\r\n        </div>\r\n        <div class="input-group input-group-sm filter-help" >\r\n            <div class="tooltip_qd_chartHelper">?\r\n                <span class="tooltiptext_qd_chartHelper">\r\n                To filter data, use commas to separate data, add - to exclude data.\r\n                <br> <br> \r\n                EITHER use ~ to include columns OR ~! to exclude columns.\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n        <div class="chart-selector-container">\r\n            <div class="chart-selector input-group input-group-sm">\r\n                <select class="form-control" [(ngModel)]="toolbarProps.chartType" (ngModelChange)="toolbarPropsChanged($event)">\r\n                    <option value=\'0\'>Bar Chart</option>\r\n                    <option value=\'7\'>Horizontal Bar</option>               \r\n                    <option value=\'2\'>Stacked Bar Chart</option>\r\n                    <option value=\'3\'>Line Chart</option>\r\n                    <option value=\'1\'>Bar & Line Combo</option>\r\n                    <option value=\'4\'>Pie</option>\r\n                    <option value=\'5\'>Donut</option>\r\n                    \x3c!-- <option value=\'8\'>Pareto (1 dataset)</option> --\x3e\r\n                    <option value=\'9\'>Pareto Analysis</option>\r\n                    <option value=\'6\'>Grid View</option>\r\n\r\n                </select>\r\n            </div>\r\n            <div style="float:right">\r\n                <div style="padding-top:4px;padding-right: 15px; padding-left:5px">\r\n                    <span style="zoom:0.8;">\r\n                        <label class="switch tooltip_qd_chartHelper" >\r\n                        <input type=\'checkbox\' id=\'${this.id}_swapCheckbox\'  [(ngModel)]="toolbarProps.swapLabelsAndDatasets" (ngModelChange)="toolbarPropsChanged($event)">\r\n                            <span class="slider round"></span>\r\n                            <span class="tooltiptext_qd_chartHelper">\r\n                                Swap labels and datasets\r\n                            </span>\r\n                        </label>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>',styles:['.toolbar-container{width:100%;height:100%;display:flex;flex-flow:column}.toolbar{background-color:#d3d3d3;padding:4px;border-radius:8px 8px 0 0}.filter-textbox-container{padding-top:4px;float:left;width:40%;padding-left:15px}.filter-textbox{width:100%;border:0;background-color:#d3d3d3;border-bottom:2px solid #a9a9a9}.filter-textbox:focus{border:0;border-bottom:2px solid #000;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;-webkit-tap-highlight-color:transparent;user-select:none;outline:0}.filter-help{padding-top:4px;float:left}.chart-selector-container{float:right}.chart-selector{padding-top:4px;float:left}select{width:80px}.switch{position:relative;display:inline-block;width:60px;height:34px}.switch input{display:none}.slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:#ccc;transition:.4s}.slider:before{position:absolute;content:"";height:26px;width:26px;left:4px;bottom:4px;background-color:#fff;transition:.4s}input:checked+.slider{background-color:#2196f3}input:focus+.slider{box-shadow:0 0 1px #2196f3}input:checked+.slider:before{transform:translateX(26px)}.slider.round{border-radius:34px}.slider.round:before{border-radius:50%}.tooltip_qd_chartHelper{position:relative;display:inline-block}.tooltip_qd_chartHelper .tooltiptext_qd_chartHelper{visibility:hidden;width:120px;background-color:#000;color:#fff;text-align:center;padding:5px 0;border-radius:6px;position:absolute;z-index:1;margin-top:40px}.tooltip_qd_chartHelper:hover .tooltiptext_qd_chartHelper{visibility:visible}']}]}],t.propDecorators={toolbarProps:[{type:e.Input}],toolbarPropsChange:[{type:e.Output}]},t}();var d=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{declarations:[l,p,i],imports:[r.CommonModule,o.FormsModule],exports:[l,i]}]}],t}();t.NEURASIL_CHART_TYPE=s,t.NeurasilChartsComponent=l,t.NeurasilChartsModule=d,t.NeurasilChartsService=n,t.NeurasilDataFilter=i,t.ɵa=p,t.ɵb=i,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=neurasil-charts.umd.min.js.map